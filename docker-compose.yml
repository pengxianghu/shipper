version: '3.1'

services:
#  consignment-cli: 
#   build: ./consignment-cli
#   environment:
#    MICRO_REGISTRY: "mdns"
#   networks: 
#    - my-network

 consignment-service: 
  build: ./consignment-service
  ports:
   - 50051:50051
  environment:
   MICRO_RESIGTRY: "mdns"
   MICRO_ADDRESS: ":50051"
   DB_HOST: "datastore:27017"
  networks: 
   - my-network
  depends_on: 
   - datastore

 vessel-service:
  build: ./vessel-service
  ports:
   - 50052:50051
  environment:
   MICRO_ADDRESS: ":50051"
   MICRO_REGISTRY: "mdns"
   DB_HOST: "datastore:27017"
  networks: 
   - my-network
  depends_on: 
   - datastore

 database:
  image: postgres
  ports:
   - 5432:5432
  environment:
   POSTGRES_DB: "postgres"
   POSTGRES_USER: "postgres"
   POSTGRES_PASSWORD: "postgres"
  networks:
   - my-network

 user-service:
  build: ./user-service
  ports:
   - 50053:50051
  environment:
   MICRO_ADDRESS: ":50051"
   MICRO_REGISTRY: "mdns"
   DB_NAME: "postgres"
   DB_HOST: "database"
   DB_PORT: "5432"
   DB_USER: "postgres"
   DB_PASSWORD: "postgres"
  networks:
   - my-network
  depends_on: 
   - database

#  user-cli: 
#   build: ./user-cli
#   environment:
#    MICRO_REGISTRY: "mdns"
#   networks: 
#    - my-network
 
 email-service:
  build: ./email-service
  ports:
   - 50054:50051
  environment:
   MICRO_ADDRESS: ":50051"
   MICRO_REGISTRY: "mdns"
  networks: 
   - my-network

 datastore:
  image: mongo
  ports:
   - 27017:27017
  networks: 
   - my-network

 micro:
  image: microhq/micro
  ports:
   - 8080:8080
  environment:
   MICRO_REGISTRY: "mdns"
  command: api --handler=rpc --address=:8080 --namespace=shipper
  networks: 
   - my-network
  
 nginx:
  image: nginx
  ports:
   - 80:80
  volumes:
   - ./nginx-proxy/nginx.conf:/etc/nginx/conf.d/default.conf
   - ./nginx-proxy/build:/usr/share/nginx/html
  networks: 
   - my-network

networks:
 my-network:
  driver: bridge
