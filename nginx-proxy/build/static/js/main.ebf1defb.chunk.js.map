{"version":3,"sources":["CreateConsignment.js","Authenticate.js","App.js","serviceWorker.js","index.js"],"names":["CreateConsignment","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","created","description","weight","containers","consignments","create","consignment","token","sessionStorage","getItem","fetch","method","headers","Content-Type","Authorization","concat","body","JSON","stringify","service","request","_","omit","then","res","json","setState","toConsumableArray","addContainer","e","target","value","setDescription","setWeight","Number","_this2","req","console","log","react_default","a","createElement","className","onChange","placeholder","type","onClick","length","map","item","vessel_id","id","React","Component","Authenticate","authenticated","email","password","err","login","data","setItem","onAuth","catch","signup","name","setEmail","setPassword","setName","App","renderLogin","src_Authenticate","renderAuthenticated","src_CreateConsignment","getToken","isAuthenticated","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebf1defb.chunk.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nclass CreateConsignment extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    state = {\n        created: false,\n        description: '',\n        weight: 0,\n        containers: [],\n        consignments: [],\n    }\n\n    componentWillMount() {\n        const token = sessionStorage.getItem('token');\n        fetch(`http://www.pengxianghu.com/rpc`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n                service: 'go.micro.srv.consignment',\n                method: 'ConsignmentService.GetConsignments',\n                request: {},\n            })\n        })\n        .then(req => req.json())\n        .then((res) => {\n            console.log(\"create consignment component mount: \" + res);\n            this.setState({\n                consignments: res.consignments,\n            });\n        });\n    }\n\n    create = () => {\n        const consignment = this.state;\n        const token = sessionStorage.getItem('token');\n        fetch(`http://www.pengxianghu.com/rpc`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n                service: 'go.micro.srv.consignment',\n                method: 'ConsignmentService.CreateConsignment',\n                request: _.omit(consignment, 'created', 'consignments'),\n            }),\n        })\n        .then((res) => res.json())\n        .then((res) => {\n            this.setState({\n                created: res.created,\n                consignments: [...this.state.consignments, consignment],\n            });\n        });\n    }\n\n    addContainer = e => {\n        this.setState({\n            containers: [...this.state.containers, e.target.value],\n        });\n    }\n\n    setDescription = e => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    setWeight = e => {\n        this.setState({\n            weight: Number(e.target.value),\n        });\n    }\n\n    render() {\n        const { consignments, } = this.state;\n        return (\n            <div className='consignment-screen'>\n                <div className='consignment-form container'>\n                    <br />\n                    <div className='form-group'>\n                        <textarea onChange={this.setDescription} className='form-control' placeholder='Description'></textarea>\n                    </div>\n                    <div className='form-group'>\n                        <input onChange={this.setWeight} type='number' placeholder='Weight' className='form-control' />\n                    </div>\n                    <div className='form-control'>\n                        Add containers...\n                    </div>\n                    <br />\n                    <button onClick={this.create} className='btn btn-primary'>Create</button>\n                    <br />\n                    <hr />\n                </div>\n                {(consignments && consignments.length > 0\n                    ? <div className='consignment-list'>\n                            <h2>Consignments</h2>\n                            {consignments.map((item) => (\n                                <div>\n                                    <p>Vessel id: {item.vessel_id}</p>\n                                    <p>Consignment id: {item.id}</p>\n                                    <p>Description: {item.description}</p>\n                                    <p>Weight: {item.weight}</p>\n                                    <hr />\n                                </div>\n                            ))}\n                        </div>\n                    : false)}\n            </div>\n        );\n    }\n}\n\nexport default CreateConsignment;","import React from 'react';\n// import axios from 'axios';\n\nclass Authenticate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    state = {\n        authenticated: false,\n        email: '',\n        password: '',\n        err: '',\n    }\n\n    login = () => {\n\n        fetch(`http://www.pengxianghu.com/rpc`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                request: {\n                    email: this.state.email,\n                    password: this.state.password,\n                },\n                service: 'go.micro.srv.user',\n                method: 'UserService.Auth',\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                // console.log(data);\n                this.setState({\n                    token: data.token,\n                    authenticated: true,\n                });\n                sessionStorage.setItem('token', data.token);\n                this.props.onAuth(data.token);\n            })\n            .catch(err => this.setState({ err, authenticated: false, }));\n\n        // let res = '{\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VyIjp7ImlkIjoiNjY0ODNmZjYtOWVhMC00M2UwLThiNmYtMzQyYTJlM2I3OTUwIiwibmFtZSI6ImhlbnJ5IiwiZW1haWwiOiJoZW5yeSIsInBhc3N3b3JkIjoiJDJhJDEwJEd2YXpqSDZwelE1N3M1ZHZhb2ZvTU9LMGsuV3lQNjhsdTJYaFRsWnhRN3ZqMDhrMmUzOWlTIn0sImV4cCI6MTU2MDQxNDA3MiwiaXNzIjoiZ28ubWljcm8uc3J2LnVzZXIifQ.eqZKQm0oi2XA8OpHhk4-_E59mekjmSVZC41gnrtAiHs\"}';\n\n        // let obj = JSON.parse(res);\n        // window.localStorage.setItem('token', obj.token);\n        // this.props.onAuth();\n\n    }\n\n    signup = () => {\n        fetch(`http://www.pengxianghu.com/rpc`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                request: {\n                    email: this.state.email,\n                    password: this.state.password,\n                    name: this.state.name,\n                },\n                service: 'go.micro.srv.user',\n                method: 'UserService.Create',\n            }),\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                console.log(res);\n                // this.setState({\n                //     authenticated: true,\n                // });\n                // this.props.onAuth(res.token);\n            })\n            .catch(err => this.setState({ err, authenticated: false, }));\n    }\n\n    setEmail = e => {\n        this.setState({\n            email: e.target.value,\n        });\n    }\n\n    setPassword = e => {\n        this.setState({\n            password: e.target.value,\n        });\n    }\n\n    setName = e => {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <div className='Authenticate'>\n                <div className='Login'>\n                    <div className='form-group'>\n                        <input\n                            type=\"email\"\n                            onChange={this.setEmail}\n                            placeholder='E-Mail'\n                            className='form-control' />\n                    </div>\n                    <div className='form-group'>\n                        <input\n                            type=\"password\"\n                            onChange={this.setPassword}\n                            placeholder='Password'\n                            className='form-control' />\n                    </div>\n                    <button className='btn btn-primary' onClick={this.login}>登录</button>\n                    <br /><br />\n                </div>\n                <div className='Sign-up'>\n                    <div className='form-group'>\n                        <input\n                            type='input'\n                            onChange={this.setName}\n                            placeholder='Name'\n                            className='form-control' />\n                    </div>\n                    <div className='form-group'>\n                        <input\n                            type='email'\n                            onChange={this.setEmail}\n                            placeholder='E-Mail'\n                            className='form-control' />\n                    </div>\n                    <div className='form-group'>\n                        <input\n                            type='password'\n                            onChange={this.setPassword}\n                            placeholder='Password'\n                            className='form-control' />\n                    </div>\n                    <button className='btn btn-primary' onClick={this.signup}>注册</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Authenticate;","import React, { Component } from 'react';\nimport './App.css';\nimport CreateConsignment from './CreateConsignment';\nimport Authenticate from './Authenticate';\n\nclass App extends Component {\n\n    state = {\n        err: null,\n        authenticated: false,\n    }\n\n    onAuth = (token) => {\n        this.setState({\n            authenticated: true,\n        });\n    }\n\n    renderLogin = () => {\n        return (\n            <Authenticate onAuth={this.onAuth} />\n        );\n    }\n\n    renderAuthenticated = () => {\n        return (\n            <CreateConsignment />\n        );\n    }\n\n    getToken = () => {\n        return sessionStorage.getItem('token') || false;\n    }\n\n    isAuthenticated = () => {\n        return this.state.authenticated || this.getToken() || false;\n    }\n\n    render() {\n        var authenticated = this.isAuthenticated();\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n                    <h2>Shipper</h2>\n                </div>\n                <div className='App-intro container'>\n                    {(authenticated ? this.renderAuthenticated() : this.renderLogin())}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}